var n={name:"ui-dropdown",props:{name:String,links:Array,right:{type:Boolean,default:!1},top:{type:Boolean,default:!1},autoPosition:{type:Boolean,default:!0},boundary:{type:String,default:"body"}},data:function(){return{isOpened:!1,boundaryElement:null,clipRect:{bounds:null,toggler:null,dropdown:null},canOpen:{left:!0,top:!0,right:!0,bottom:!0},debounce:{scroll:null,resize:null}}},computed:{isTouch:function(){return this._isMounted&&("ontouchstart"in window||navigator.msMaxTouchPoints>0)},otsideClickEvents:function(){return this.isTouch?["touchstart","click"]:["click"]},positionEvents:function(){return!!this.autoPosition&&[{event:"scroll",handler:"scrollHandler"},{event:"resize",handler:"resizeHandler"}]},position:{get:function(){return this.autoPosition?{right:this.right&&this.canOpen.right||this.canOpen.right&&!this.canOpen.left,top:this.top&&this.canOpen.top||this.canOpen.top&&!this.canOpen.bottom}:{right:this.right,top:this.top}},set:function(n){for(var t in n)this.$set(this.canOpen,t,n[t])}}},watch:{isOpened:function(n){var t=this;n?(this.otsideClickEvents.forEach(function(n){window.addEventListener(n,t.clikcOutsideHandler,{capture:!0})}),this.positionEvents&&this.positionEvents.forEach(function(n){window.addEventListener(n.event,t[n.handler],{passive:!0})})):(this.otsideClickEvents.forEach(function(n){window.removeEventListener(n,t.clikcOutsideHandler)}),this.positionEvents&&this.positionEvents.forEach(function(n){window.removeEventListener(n.event,t[n.handler],{passive:!0})}))}},methods:{toggleMenu:function(){this.isOpened=!this.isOpened},openMenu:function(){this.isOpened=!0},closeMenu:function(){this.isOpened=!1},clikcOutsideHandler:function(n){(!this.$el.contains(n.target)&&this.$el!==n.target||this.$refs.overlay&&n.target===this.$refs.overlay)&&this.closeMenu()},menuClickHandler:function(n){(["BUTTON","A"].includes(n.target.tagName)||n.target.closest("button, a"))&&this.closeMenu()},setBoundaryElement:function(){var n=this.$el.closest(this.boundary);n||(n=document.querySelector("body")),this.boundaryElement=n},setBoundingRect:function(){this.clipRect.bounds=this.boundaryElement.getBoundingClientRect()},setSelfBounds:function(){this.clipRect.toggler=this.$el.getBoundingClientRect()},setDropdownBounds:function(){this.clipRect.dropdown={width:this.$refs.dropdown.clientWidth,height:this.$refs.dropdown.clientHeight}},checkPosition:function(){this.setBoundingRect(),this.setSelfBounds(),this.setDropdownBounds(),this.autoPosition&&(this.checkCanOpenHorizontal(),this.checkCanOpenVertical())},checkCanOpenHorizontal:function(){var n=this.clipRect.bounds,t=this.clipRect.toggler,e=this.clipRect.dropdown;this.position={left:n.width+n.left>t.left+e.width,right:t.left-n.left>e.width-t.width}},checkCanOpenVertical:function(){var n=this.clipRect.bounds,t=this.clipRect.toggler,e=this.clipRect.dropdown,o={top:t.top-n.top>e.height,bottom:n.top+n.height-t.top-t.height>e.height},i={top:t.top>e.height,bottom:t.top+t.height+e.height<window.innerHeight};this.position={top:o.top&&i.top,bottom:o.bottom&&i.bottom}},scrollHandler:function(){var n=this;clearTimeout(this.debounce.scroll),this.debounce.scroll=setTimeout(function(){n.isOpened&&(n.setSelfBounds(),n.checkCanOpenHorizontal(),n.checkCanOpenVertical())},300)},resizeHandler:function(){var n=this;clearTimeout(this.debounce.resize),this.debounce.resize=setTimeout(function(){n.isOpened&&n.checkPosition()},300)}},mounted:function(){this.setBoundaryElement()}};var t=function(n,t,e,o,i,s,r,a,d,l){"boolean"!=typeof r&&(d=a,a=r,r=!1);var c,u="function"==typeof e?e.options:e;if(n&&n.render&&(u.render=n.render,u.staticRenderFns=n.staticRenderFns,u._compiled=!0,i&&(u.functional=!0)),o&&(u._scopeId=o),s?(c=function(n){(n=n||this.$vnode&&this.$vnode.ssrContext||this.parent&&this.parent.$vnode&&this.parent.$vnode.ssrContext)||"undefined"==typeof __VUE_SSR_CONTEXT__||(n=__VUE_SSR_CONTEXT__),t&&t.call(this,d(n)),n&&n._registeredComponents&&n._registeredComponents.add(s)},u._ssrRegister=c):t&&(c=r?function(){t.call(this,l(this.$root.$options.shadowRoot))}:function(n){t.call(this,a(n))}),c)if(u.functional){var p=u.render;u.render=function(n,t){return c.call(t),p(n,t)}}else{var h=u.beforeCreate;u.beforeCreate=h?[].concat(h,c):[c]}return e},e="undefined"!=typeof navigator&&/msie [6-9]\\b/.test(navigator.userAgent.toLowerCase());var o=document.head||document.getElementsByTagName("head")[0],i={};var s=function(n){return function(n,t){return function(n,t){var s=e?t.media||"default":n,r=i[s]||(i[s]={ids:new Set,styles:[]});if(!r.ids.has(n)){r.ids.add(n);var a=t.source;if(t.map&&(a+="\n/*# sourceURL="+t.map.sources[0]+" */",a+="\n/*# sourceMappingURL=data:application/json;base64,"+btoa(unescape(encodeURIComponent(JSON.stringify(t.map))))+" */"),r.element||(r.element=document.createElement("style"),r.element.type="text/css",t.media&&r.element.setAttribute("media",t.media),o.appendChild(r.element)),"styleSheet"in r.element)r.styles.push(a),r.element.styleSheet.cssText=r.styles.filter(Boolean).join("\n");else{var d=r.ids.size-1,l=document.createTextNode(a),c=r.element.childNodes;c[d]&&r.element.removeChild(c[d]),c.length?r.element.insertBefore(l,c[d]):r.element.appendChild(l)}}}(n,t)}},r=n,a=function(){var n=this,t=n.$createElement,e=n._self._c||t;return e("div",{staticClass:"ui-dropdown"},[e("button",{staticClass:"ui-dropdown__toggler",attrs:{"aria-haspopup":"true"},on:{click:function(t){return t.stopPropagation(),n.toggleMenu(t)},keydown:function(t){return!t.type.indexOf("key")&&n._k(t.keyCode,"esc",27,t.key,["Esc","Escape"])?null:n.closeMenu(t)}}},[n._t("toggler",[n._v(n._s(n.name))])],2),n._v(" "),e("transition",{attrs:{name:"ui-dropdown-scale"}},[n._t("default",[n.links&&n.isOpened?e("ul",{staticClass:"ui-dropdown__list",attrs:{"aria-expanded":n.isOpened?"true":"false"}},n._l(n.links,function(t,o){return e("li",{key:o},[e("nuxt-link",{staticClass:"ui-dropdown__list-item",attrs:{to:t.url}},[n._v("\n                        "+n._s(t.name)+"\n                    ")])],1)}),0):n._e()])],2)],1)};a._withStripped=!0;var d=t({render:a,staticRenderFns:[]},function(n){n&&n("data-v-6ef803bf_0",{source:".ui-dropdown {\n  position: relative;\n}\n.ui-dropdown__list {\n    background: var(--background, #fff);\n    color: var(--text-color, #222);\n    box-shadow: 0 0 20px var(--box-shadow, rgba(34, 34, 34, 0.5));\n    padding: 15px;\n    margin: 0;\n    margin-top: 5px;\n    list-style: none;\n    min-width: 160px;\n    min-width: max-content;\n    position: absolute;\n    top: 100%;\n    left: 0;\n    z-index: 100;\n}\n.ui-dropdown__list-item {\n    text-decoration: none;\n}\n.ui-dropdown-scale-enter, .ui-dropdown-scale-leave-to {\n  transform: scaleY(0.85);\n  opacity: 0;\n}\n.ui-dropdown-scale-enter-active, .ui-dropdown-scale-leave-active {\n  transform-origin: top center;\n  transition: transform 200ms ease, opacity 200ms ease;\n}\n\n/*# sourceMappingURL=dropdown.vue.map */",map:{version:3,sources:["/home/illjah/awescode/wiwo-module/src/vue/dropdown.vue","dropdown.vue"],names:[],mappings:"AAyRA;EACA,kBAAA;AAAA;AAKA;IACA,mCAAA;IACA,8BAAA;IACA,6DAAA;IAEA,aAAA;IACA,SAAA;IACA,eAAA;IACA,gBAAA;IACA,gBAAA;IACA,sBAAA;IAEA,kBAAA;IACA,SAAA;IACA,OAAA;IACA,YAAA;AAAA;AAEA;IACA,qBAAA;AAAA;AAKA;EAEA,uBAAA;EACA,UAAA;AAAA;AAEA;EAEA,4BAAA;EACA,oDAAA;AAAA;;ACnSA,uCAAuC",file:"dropdown.vue",sourcesContent:["<template>\n    <div class=\"ui-dropdown\">\n        <button aria-haspopup=\"true\"\n            class=\"ui-dropdown__toggler\"\n            @click.stop=\"toggleMenu\"\n            @keydown.esc=\"closeMenu\"\n        >\n            <slot name=\"toggler\">{{ name }}</slot>\n        </button>\n        <transition name=\"ui-dropdown-scale\">\n            <slot>\n                <ul v-if=\"links && isOpened\"\n                    class=\"ui-dropdown__list\"\n                    :aria-expanded=\" isOpened ? 'true' : 'false'\">\n                    <li v-for=\"(link, i) in links\" :key=\"i\">\n                        <nuxt-link\n                            :to=\"link.url\"\n                            class=\"ui-dropdown__list-item\"\n                        >\n                            {{ link.name }}\n                        </nuxt-link>\n                    </li>\n                </ul>\n            </slot>\n        </transition>\n    </div>\n</template>\n\n\n<script>\nconst BOUNDARY_ELEMENT_DEFAULT = 'body'\nconst DEBOUNCE_TIMEOUT = 300\n\nexport default {\n\n    name: 'ui-dropdown',\n\n    props: {\n\n        name: String,\n\n        links: Array,\n\n        right: {\n            type: Boolean,\n            default: false\n        },\n\n        top: {\n            type: Boolean,\n            default: false\n        },\n\n        autoPosition: {\n            type: Boolean,\n            default: true\n        },\n\n        boundary: {\n            type: String,\n            default: BOUNDARY_ELEMENT_DEFAULT\n        }\n    },\n\n\n    data() {\n        return {\n            isOpened: false,\n            boundaryElement: null,\n            clipRect: {\n                bounds: null,\n                toggler: null,\n                dropdown: null,\n            },\n            canOpen: {\n                left: true,\n                top: true,\n                right: true,\n                bottom: true\n            },\n            debounce: {\n                scroll: null,\n                resize: null\n            }\n        }\n    },\n\n\n    computed: {\n\n        isTouch() {\n            return this._isMounted && ( 'ontouchstart' in window || navigator.msMaxTouchPoints > 0 )\n        },\n\n        otsideClickEvents() {\n            return this.isTouch ? ['touchstart', 'click'] : ['click']\n        },\n\n        positionEvents() {\n            return this.autoPosition ?\n                   [\n                       { event: 'scroll', handler: 'scrollHandler'},\n                       { event: 'resize', handler: 'resizeHandler'}\n                   ] :\n                   false\n        },\n\n        position: {\n\n            get() {\n                if ( ! this.autoPosition ) {\n                    return {\n                        right: this.right,\n                        top: this.top\n                    }\n                }\n                return {\n                    right: (this.right && this.canOpen.right) || (this.canOpen.right && ! this.canOpen.left),\n                    top: (this.top && this.canOpen.top) || (this.canOpen.top && ! this.canOpen.bottom)\n                }\n            },\n\n            set( pos ) {\n                for ( let direction in pos ) {\n                    this.$set( this.canOpen, direction, pos[direction] )\n                }\n            }\n        }\n    },\n\n\n    watch: {\n\n        isOpened(isOpened) {\n            if (isOpened) {\n                this.otsideClickEvents.forEach( event => {\n                    window.addEventListener(event, this.clikcOutsideHandler, {\n                        capture: true\n                    })\n                })\n                if ( this.positionEvents ) {\n                    this.positionEvents.forEach( item => {\n                        window.addEventListener(item.event, this[item.handler], {\n                            passive: true\n                        })\n                    })\n                }\n            } else {\n                this.otsideClickEvents.forEach( event => {\n                    window.removeEventListener(event, this.clikcOutsideHandler)\n                })\n                if ( this.positionEvents ) {\n                    this.positionEvents.forEach( item => {\n                        window.removeEventListener(item.event, this[item.handler], {\n                            passive: true\n                        })\n                    })\n                }\n            }\n        }\n    },\n\n\n    methods: {\n\n        toggleMenu() {\n            this.isOpened = !this.isOpened\n        },\n\n        openMenu() {\n            this.isOpened = true\n        },\n\n        closeMenu() {\n            this.isOpened = false\n        },\n\n        clikcOutsideHandler($event) {\n            if ( ! ( this.$el.contains($event.target) || this.$el === $event.target ) ||\n                 this.$refs.overlay && ($event.target === this.$refs.overlay) ) {\n                this.closeMenu();\n            }\n        },\n\n        menuClickHandler($event) {\n            if (['BUTTON', 'A'].includes($event.target.tagName) ||\n                $event.target.closest('button, a')) {\n                this.closeMenu();\n            }\n        },\n\n        setBoundaryElement() {\n            let boundaryElement = this.$el.closest(this.boundary)\n            if ( ! boundaryElement ) boundaryElement = document.querySelector(BOUNDARY_ELEMENT_DEFAULT)\n            this.boundaryElement = boundaryElement\n        },\n\n        setBoundingRect() {\n            this.clipRect.bounds = this.boundaryElement.getBoundingClientRect()\n        },\n\n        setSelfBounds() {\n            this.clipRect.toggler = this.$el.getBoundingClientRect()\n        },\n\n        setDropdownBounds() {\n            this.clipRect.dropdown = {\n                width: this.$refs.dropdown.clientWidth,\n                height: this.$refs.dropdown.clientHeight\n            }\n        },\n\n        checkPosition() {\n            this.setBoundingRect()\n            this.setSelfBounds()\n            this.setDropdownBounds()\n            if ( this.autoPosition ) {\n                this.checkCanOpenHorizontal()\n                this.checkCanOpenVertical()\n            }\n        },\n\n        checkCanOpenHorizontal() {\n            const bound = this.clipRect.bounds\n            const el = this.clipRect.toggler\n            const dropdown = this.clipRect.dropdown\n            this.position = {\n                left: bound.width + bound.left > el.left + dropdown.width,\n                right: el.left - bound.left > dropdown.width - el.width\n            }\n        },\n\n        checkCanOpenVertical() {\n            const bound = this.clipRect.bounds\n            const el = this.clipRect.toggler\n            const dropdown = this.clipRect.dropdown\n            const boundsPosition = {\n                top: el.top - bound.top > dropdown.height,\n                bottom: bound.top + bound.height - el.top - el.height > dropdown.height\n            }\n            const viewportPosition = {\n                top: el.top > dropdown.height,\n                bottom: el.top + el.height + dropdown.height < window.innerHeight\n            }\n            this.position = {\n                top: boundsPosition.top && viewportPosition.top,\n                bottom: boundsPosition.bottom && viewportPosition.bottom\n            }\n        },\n\n        scrollHandler() {\n            clearTimeout( this.debounce.scroll )\n            this.debounce.scroll = setTimeout( () => {\n                if ( this.isOpened ) {\n                    this.setSelfBounds()\n                    this.checkCanOpenHorizontal()\n                    this.checkCanOpenVertical()\n                }\n            }, DEBOUNCE_TIMEOUT )\n        },\n\n        resizeHandler() {\n            clearTimeout( this.debounce.resize )\n            this.debounce.resize = setTimeout( () => {\n                if ( this.isOpened ) {\n                    this.checkPosition()\n                }\n            }, DEBOUNCE_TIMEOUT )\n        }\n    },\n\n    mounted() {\n        this.setBoundaryElement()\n    }\n}\n<\/script>\n\n\n<style lang=\"sass\">\n@import '../sass/variables.sass';\n\n.ui-dropdown\n    position: relative\n\n    // &__toggler\n\n\n    &__list\n        background: var(--background, $background)\n        color: var(--text-color, $text-color)\n        box-shadow: 0 0 $gap var(--box-shadow, $box-shadow)\n\n        padding: .75 * $gap\n        margin: 0\n        margin-top: .25 * $gap\n        list-style: none\n        min-width: 160px\n        min-width: max-content\n\n        position: absolute\n        top: 100%\n        left: 0\n        z-index: 100\n\n    &__list-item\n        text-decoration: none\n\n// transition\n.ui-dropdown-scale\n\n    &-enter,\n    &-leave-to\n        transform: scaleY(.85)\n        opacity: 0\n\n    &-enter-active,\n    &-leave-active\n        transform-origin: top center\n        transition: transform $transition, opacity $transition\n</style>\n",".ui-dropdown {\n  position: relative; }\n  .ui-dropdown__list {\n    background: var(--background, #fff);\n    color: var(--text-color, #222);\n    box-shadow: 0 0 20px var(--box-shadow, rgba(34, 34, 34, 0.5));\n    padding: 15px;\n    margin: 0;\n    margin-top: 5px;\n    list-style: none;\n    min-width: 160px;\n    min-width: max-content;\n    position: absolute;\n    top: 100%;\n    left: 0;\n    z-index: 100; }\n  .ui-dropdown__list-item {\n    text-decoration: none; }\n\n.ui-dropdown-scale-enter, .ui-dropdown-scale-leave-to {\n  transform: scaleY(0.85);\n  opacity: 0; }\n\n.ui-dropdown-scale-enter-active, .ui-dropdown-scale-leave-active {\n  transform-origin: top center;\n  transition: transform 200ms ease, opacity 200ms ease; }\n\n/*# sourceMappingURL=dropdown.vue.map */"]},media:void 0})},r,void 0,!1,void 0,s,void 0);function l(n){l.installed||(l.installed=!0,n.component("ui-dropdown",d))}var c={install:l},u=null;"undefined"!=typeof window?u=window.Vue:"undefined"!=typeof global&&(u=global.Vue),u&&u.use(c);export default d;export{l as install,c as plugin};
